option java_package = "org.lsfn.nebula";
option java_outer_classname = "STS";

message STSup {
    message RCon {
        optional string command = 1;
    }

    message JoinRequest {
        enum JoinType {
            JOIN = 0;
            REJOIN = 1;
        }
        
        optional JoinType type = 1;
        optional string rejoinToken = 2;
    }

    message Connection {
        enum ConnectionCommand {
            CONNECT = 0;
            DISCONNECT = 1;
        }
        
        optional ConnectionCommand connectionCommand = 1;
        optional string host = 2;
        optional uint32 port = 3;
    }

    message Lobby {
        optional bool readyState = 1;
        optional string shipName = 2;
    }
    
    message Subscribe {
        repeated string valueNames = 1;
    }

    message SubscriptionValues {
        message Value {
            required uint32 id = 1;
            optional double doubleValue = 2;
            optional float  floatValue = 3;
            optional uint32 uint32Value = 4;
            optional uint64 uint64Value = 5;
            optional sint32 sint32Value = 6;
            optional sint64 sint64Value = 7;
            optional bool   boolValue = 8;
            optional string stringValue = 9;
            optional bytes  bytesValue = 10;
        }

        repeated Value values = 1;
    }

    optional RCon rcon = 1;
    optional JoinRequest joinRequest = 2;
    optional Connection connection = 3;
    optional Lobby lobby = 4;
    optional Subscribe subscribe = 5;
    optional SubscriptionValues subscriptionValues = 6;
}

message STSdown {
    message JoinInfo {
        required bool allowJoin = 1;
        optional string gameIDtoken = 2;
    }

    message JoinResponse {
        enum Type {
            JOIN_ACCEPTED = 0;
            REJOIN_ACCEPTED = 1;
            JOIN_REJECTED = 2;
        }

        required Type type = 1;
        optional string rejoinToken = 2;
    }
        
    message Connection {
        optional bool connected = 1;
    }

    message Lobby {
       optional bool readyState = 1;
       optional string shipName = 2;
       repeated string shipsInGame = 3;
       optional bool gameStarted = 4;
    }
    
    message SubscriptionResponse {
        message ValueDescription {
            required string valueName = 1;
            required uint32 valueID = 2;
            required string valueType = 3; // A string name of the value type corresponding to one of protobuf's types
        }

        repeated ValueDescription valueDescriptions = 1;
    }
    
    message SubscriptionValues {
        message Value {
            required uint32 id = 1;
            optional double doubleValue = 2;
            optional float  floatValue = 3;
            optional uint32 uint32Value = 4;
            optional uint64 uint64Value = 5;
            optional sint32 sint32Value = 6;
            optional sint64 sint64Value = 7;
            optional bool   boolValue = 8;
            optional string stringValue = 9;
            optional bytes  bytesValue = 10;
        }

        repeated Value values = 1;
    }

    optional Connection connection = 1;
    optional JoinInfo joinInfo = 2;
    optional JoinResponse joinResponse = 3;
    optional Lobby lobby = 4;
    optional SubscriptionResponse subscriptionResponse = 5;
    optional SubscriptionValues subscriptionValues = 6;

}
